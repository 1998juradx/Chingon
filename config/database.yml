# SQLite version 3.x
#   gem install sqlite3
#
# Ensure the SQLite 3 gem is defined in your Gemfile
#   gem "sqlite3"
#
# Note: This file was modified from the original PostgreSQL configuration
# to use SQLite3 instead, due to connection issues with PostgreSQL.
# Original PostgreSQL configuration is preserved in comments for reference.

default: &default
  adapter: sqlite3
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
  timeout: 5000

development:
  <<: *default
  database: db/development.sqlite3

# Warning: The database defined as "test" will be erased and
# re-generated from your development database when you run "rake".
# Do not set this db to the same as development or production.
test:
  <<: *default
  database: db/test.sqlite3

# As with config/credentials.yml, you never want to store sensitive information,
# like your database password, in your source code. If your source code is
# ever seen by anyone, they now have access to your database.
# 
# For production environments, you might want to reconsider using a more robust
# database solution like PostgreSQL when deploying to production.
production:
  <<: *default
  database: db/production.sqlite3

# Original PostgreSQL configuration (preserved for reference):
# default: &default
#   adapter: postgresql
#   encoding: unicode
#   pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
#
# development:
#   <<: *default
#   database: Chingon_development
#
# test:
#   <<: *default
#   database: Chingon_test
#
# production:
#   <<: *default
#   database: Chingon_production
#   username: Chingon
#   password: <%= ENV["CHINGON_DATABASE_PASSWORD"] %>
default: &default
  adapter: sqlite3
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
  timeout: 5000

development:
  <<: *default
  database: db/development.sqlite3

test:
  <<: *default
  database: db/test.sqlite3

production:
  <<: *default
  database: db/production.sqlite3